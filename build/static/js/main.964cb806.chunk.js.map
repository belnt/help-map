{"version":3,"sources":["Core/config.js","Core/Api.js","Core/Point.js","Core/Security.js","Maps/CanPoint.js","Maps/NeedPoint.js","Maps/MainMap.js","Social/SocialShareButtonList.js","Components/HeaderContent.js","Components/SubHeaderContent.js","Components/Button-can.js","Components/Button-need.js","Components/FooterContent.js","Core/event.js","App.js","serviceWorker.js","index.js"],"names":["CONFIG","api","axios","create","baseURL","responseType","getNeedPersons","a","post","response","data","points","map","point","type","getCanPersons","UserStatus","actual","name","bgcolor","color","stillneed","notyet","nomore","inprocess","getContactButtons","coors","lat","lon","contact","isContact","isGeo","telegram","length","slice","geo","status","escapeHtml","html","text","document","createTextNode","span","createElement","appendChild","innerHTML","getPointBalloonContent","person","index","style","backgroundColor","code","address","nickname","help","is_auto","comments","date","MainMap","state","this","loadData","setState","can_persons","need_persons","Promise","all","console","log","message","error","className","defaultState","center","zoom","controls","defaultOptions","maxZoom","modules","clusterize","gridSize","clusterOpenBalloonOnClick","clusterDisableClickZoom","clusterHideIconOnBalloonOpen","geoObjectHideIconOnBalloonOpen","defaultClusters","clusterIconLayout","clusterIconPieChartRadius","clusterIconPieChartCoreRadius","clusterIconPieChartStrokeWidth","features","now","Date","id","geometry","coordinates","options","preset","iconColor","properties","balloonContent","hintContent","clusterCaption","getCanPointFeature","getNeedPointFeature","Component","defaultHashTags","SocialShareButtonList","props","hashTags","shareUrl","messageWithHashTags","tag","join","title","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","round","TwitterShareButton","hashtags","TwitterIcon","VKShareButton","VKIcon","OKShareButton","OKIcon","TelegramShareButton","TelegramIcon","ViberShareButton","ViberIcon","HeaderContent","SubHeaderContent","event","location","shortDescription","ButtonCan","visible","showModal","handleCancel","e","onClick","placement","closable","onClose","shape","icon","CloseOutlined","src","frameborder","marginheight","marginwidth","ButtonNeed","FooterContent","EVENT","dateTime","shortDateTime","description","Header","Layout","Content","Footer","App","history","useHistory","useState","window","pathname","direction","setDirection","changeDirection","path","push","query","apikey","exact","telegramBot","Boolean","hostname","match","application","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.964cb806.chunk.js","sourcesContent":["export const CONFIG = {\n  apiBase: '', //window.location.origin,\n  yandexMapsApiKey: '2c9e2bb0-a5b8-45f5-af0a-0e8ff88aeff9',\n  geocode: 'https://geocode-maps.yandex.ru/1.x/?format=json&apikey=3394fc7a-f6b3-491f-a0fa-d7d7b4abfcd3&geocode=',\n  telegramBot: 'https://t.me/autohelp2020_bot',\n};\n","import axios from 'axios';\nimport { CONFIG } from './config';\n\nconst api = axios.create({\n  baseURL: CONFIG.apiBase,\n  responseType: 'json'\n});\n\nexport async function getNeedPersons() {\n  const response = await api.post('api/need-points.php');\n\n  return response.data.points\n    .map(point => ({ ...point, type: 'need-help' }));\n}\n\nexport async function getCanPersons() {\n  const response = await api.post('api/can-points.php');\n  return response.data.points\n    .map(point => ({ ...point, type: 'can-help' }));\n}\n","export const UserStatus = {\n  actual: { name: \"Актуально\", bgcolor: \"#f61c1c\", color: 'white' },\n  stillneed: { name: \"Надо еще\", bgcolor: \"#f4cccc\", color: 'black' },\n  notyet: { name: \"Пока не надо\", bgcolor: \"#f9cb9c\", color: 'black' },\n  nomore: { name: \"Больше не надо\", bgcolor: \"#b6d7a8\", color: 'white' },\n  inprocess: { name: \"Везут\", bgcolor: \"#ffff00\", color: 'black' },\n};\n\nexport function getContactButtons(point) {\n  const coors = point.lat + \",\" + point.lon;\n  let contact = null;\n  let isContact = false;\n  let isGeo = false;\n  let telegram = '';\n  if(point.contact.length > 0){\n    if (point.contact[0] === \"@\") {\n      telegram = point.contact;\n      contact = `<a href=\"https://t.me/${telegram.slice(1)}\" class=\"ant-btn ant-btn-primary ant-btn-sm\"><span>Телеграм</span></a>`;;\n    } else {\n      contact = `<a href=\"tel:${point.contact}\" class=\"ant-btn ant-btn-primary ant-btn-sm\"><span>Позвонить</span></a>`;;\n    }\n  } \n  let geo = `<a href=\"https://yandex.ru/maps/?rtext=~${coors}&rtt=auto'\" class=\"ant-btn ant-btn-sm\" target=\"_blank\"><span>Маршрут</span></a>`;\n  \n\n  switch (point.status) {\n    case \"actual\":\n      isContact = true;\n      isGeo = true;\n      break;\n    case \"stillneed\":\n      isContact = true;\n      isGeo = true;\n      break;\n    case \"notyet\":\n      isContact = false;\n      isGeo = true;\n      break;\n    case \"nomore\":\n      isContact = false;\n      isGeo = false;\n      break;\n    case \"inprocess\":\n      isContact = false;\n      isGeo = false;\n      break;\n\n    default:\n      isContact = true;\n      isGeo = true;\n      break;\n  }\n\n  if (!isContact || !contact) {\n    contact = \"\";\n  }\n  if (!isGeo) {\n    geo = \"\";\n  }\n\n  const buttons = `<div class=\"baloon-footer\">\n  ${contact}\n  ${geo}\n  </div>`;\n  return buttons;\n}\n","export function escapeHtml(html) {\n    const text = document.createTextNode(html);\n    const span = document.createElement('span');\n    span.appendChild(text);\n\n    return span.innerHTML;\n}\n","import { UserStatus, getContactButtons } from '../Core/Point';\nimport { escapeHtml } from '../Core/Security';\n\nfunction getPointBalloonContent(person, index) {\n    const status = UserStatus[person.status]\n    const style = {\n        backgroundColor: status.bgcolor,\n        color: status.color\n      };\n\n    return `\n        <div>\n            <div class=\"status-code\">\n            <span class=\"driver status status-${person.status} mb-1\" style=\"background-color: ${style.backgroundColor}; color: ${style.color}\">${status.name}</span>\n            <span><strong>Код: ${person.code}</strong></span>\n            </div>\n            <div>\n                <strong>Основной адрес:</strong> ${escapeHtml(person.address)}\n            </div>\n            <div>\n                <strong>Контакт:</strong> ${escapeHtml(person.nickname)}\n            </div>\n            <div>\n                <strong>Поможет:</strong> ${escapeHtml(person.help)}\n            </div>\n            <div>\n                <strong>Авто:</strong> ${escapeHtml(person.is_auto)}\n            </div>\n            <div>\n                <strong>Комментарий:</strong> ${escapeHtml(person.comments)}\n            </div>\n            <div>\n                <strong>Отметка времени:</strong> ${escapeHtml(person.date)}\n            </div>\n            ${getContactButtons(person)}\n        </div>`\n}\n\nexport function getCanPointFeature(person, index) {\n    // Generate a dynamic Id to make a map rerendered properly.\n    const now = Date.now();\n    const id = `${index}_${now}`;\n\n    const nickname = escapeHtml(person.nickname);\n    const status = UserStatus[person.status]\n\n    return {\n        type: 'Feature',\n        id,\n        geometry: {\n            type: 'Point',\n            coordinates: [person.lat, person.lon]\n        },\n        options: {\n            preset: 'islands#heartIcon',\n            iconColor: '#1890ff', //status.bgcolor\n        },\n        properties: {\n            balloonContent: getPointBalloonContent(person, index),\n            hintContent: `Помогатор (${nickname})`,\n            clusterCaption: `Помогатор (${nickname})`,\n        }\n    };\n}\n","import { UserStatus, getContactButtons } from \"../Core/Point\";\nimport { escapeHtml } from \"../Core/Security\";\n\nfunction getPointBalloonContent(person, index) {\n  const status = UserStatus[person.status];\n  const style = {\n    backgroundColor: status.bgcolor,\n    color: status.color\n  };\n  return `\n        <div>\n            <div class=\"status-code\">\n              <span class=\"driver status status-${person.status} mb-1\" style=\"background-color: ${style.backgroundColor}; color: ${style.color}\">${status.name}</span>\n              <span><strong>Код: ${person.code}</strong></span>\n            </div>            \n            <div>\n                <strong>Основной адрес:</strong> ${escapeHtml(person.address)}\n            </div>\n            <div>\n                <strong>Контакт:</strong> ${escapeHtml(person.nickname)}\n            </div>\n            <div>\n                <strong>Нужна помощь:</strong> ${escapeHtml(person.help)}\n            </div>\n            <div>\n                <strong>Авто:</strong> ${escapeHtml(person.is_auto)}\n            </div>\n            <div>\n                <strong>Комментарий:</strong> ${escapeHtml(person.comments)}\n            </div>\n            <div>\n                <strong>Отметка времени:</strong> ${escapeHtml(person.date)}\n            </div>\n            ${getContactButtons(person)}\n        </div>`;\n}\n\nexport function getNeedPointFeature(person, index) {\n  // Generate a dynamic Id to make a map rerendered properly.\n  const now = Date.now();\n  const id = `${index}_${now}`;\n\n  const nickname = escapeHtml(person.nickname);\n  const status = UserStatus[person.status];\n\n  return {\n    type: \"Feature\",\n    id,\n    geometry: {\n      type: \"Point\",\n      coordinates: [person.lat, person.lon],\n    },\n    options: {\n      preset: \"islands#attentionCircleIcon\",\n      iconColor: status.bgcolor,\n    },\n    properties: {\n      balloonContent: getPointBalloonContent(person, index),\n      hintContent: `Нужна помощь (${nickname})`,\n      clusterCaption: `Нужна помощь (${nickname})`,\n    },\n  };\n}\n","import React, { Component } from 'react';\nimport { Map, ObjectManager } from 'react-yandex-maps';\nimport { message } from 'antd';\nimport './MainMap.css';\nimport { getCanPersons, getNeedPersons } from '../Core/Api';\nimport { getCanPointFeature } from './CanPoint';\nimport { getNeedPointFeature } from './NeedPoint';\n\nclass MainMap extends Component {\n    state = {\n        points: [],\n    }\n\n    async componentDidMount() {\n        const points = await this.loadData();\n        this.setState({ \n            points: [...points.can_persons, ...points.need_persons],\n         });\n    }\n\n    async loadData() {\n        try {\n            const [can_persons, need_persons] = await Promise.all([\n                getCanPersons(),\n                getNeedPersons(),\n            ]);\n            console.log(getCanPersons())\n            return {\n                can_persons,\n                need_persons\n            }\n        } catch (e) {\n            message.error('Не удалось загрузить данные. Пожалуйста, повторите позже.');\n\n            return {};\n        }\n    }\n\n    render() {\n        return (\n            <Map\n                className=\"map\"\n                defaultState={{\n                    center: [53.902512, 27.561481],\n                    zoom: 12,\n                    controls: [\n                        'geolocationControl',\n                        'fullscreenControl',\n                        'searchControl',\n                        'zoomControl',\n                    ],\n                }}\n                defaultOptions={{\n                    maxZoom: 18\n                }}\n                modules={[\n                    'control.GeolocationControl',\n                    'control.FullscreenControl',\n                    'control.SearchControl',\n                    'control.ZoomControl',\n                ]}\n            >\n                <ObjectManager\n                    defaultOptions={{\n                        clusterize: true,\n                        gridSize: 64,\n                        clusterOpenBalloonOnClick: true,\n                        clusterDisableClickZoom: false,\n                        clusterHideIconOnBalloonOpen: false,\n                        geoObjectHideIconOnBalloonOpen: false,\n                    }}\n                    defaultClusters={{\n                        clusterIconLayout: 'default#pieChart',\n                        clusterIconPieChartRadius: 30,\n                        clusterIconPieChartCoreRadius: 20,\n                        clusterIconPieChartStrokeWidth: 5,\n                    }}\n                    modules={[\n                        'geoObject.addon.balloon',\n                        'geoObject.addon.hint',\n                        'objectManager.addon.clustersBalloon',\n                        'objectManager.addon.objectsBalloon',\n                        'objectManager.addon.objectsHint',\n                        'layout.PieChart',\n                    ]}\n                    features={this.state.points.map((point, index) => {\n                        return point.type === 'can-help' ?\n                            getCanPointFeature(point, index) :\n                            getNeedPointFeature(point, index);\n                    })}\n                ></ObjectManager>\n            </Map>\n        );\n    }\n}\n\nexport default MainMap;\n","import React from 'react';\nimport {\n    FacebookIcon,\n    FacebookShareButton,\n    OKIcon,\n    OKShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    TelegramIcon,\n    TelegramShareButton,\n    ViberIcon,\n    ViberShareButton,\n    VKIcon,\n    VKShareButton,\n} from \"react-share\";\n\n\nconst defaultHashTags = [\n  'helpbelarus',\n  'помогиБоровая',\n  'помогимне',\n];\n\nconst defaultShareUrl = 'https://helpbelarus.org';\n\nconst defaultMessage = 'Взаимопомощь в Беларуси';\n\n\n/**\n * A list of \"Share\" buttons for social networks.\n * @see https://github.com/nygardk/react-share \n */\nconst SocialShareButtonList = (props) => {\n    const hashTags = props.hashTags || defaultHashTags;\n    const message = props.message || defaultMessage;\n    const shareUrl = props.shareUrl || defaultShareUrl;\n\n    const messageWithHashTags = `${message} ${hashTags.map(tag => `#${tag}`).join(' ')}`;\n\n    return (\n        <ul className=\"social-share-button-list\">\n            <li title=\"Поделиться в Facebook\">\n                <FacebookShareButton\n                    className=\"social-share-button\"\n                    url={shareUrl}\n                    quote={message}\n                    hashtag={'#' + hashTags[0]}\n                >\n                    <FacebookIcon size={28} round />\n                </FacebookShareButton>\n            </li>\n            <li title=\"Поделиться в Twitter\">\n                <TwitterShareButton\n                    className=\"social-share-button\"\n                    url={shareUrl}\n                    title={message}\n                    hashtags={hashTags}\n                >\n                    <TwitterIcon size={28} round />\n                </TwitterShareButton>\n            </li>\n            <li title=\"Поделиться в ВКонтакте\">\n                <VKShareButton\n                    className=\"social-share-button\"\n                    url={shareUrl}\n                    title={messageWithHashTags}\n                >\n                    <VKIcon size={28} round />\n                </VKShareButton>\n            </li>\n            <li title=\"Поделиться в Одноклассники\">\n                <OKShareButton\n                    className=\"social-share-button\"\n                    url={shareUrl}\n                    title={messageWithHashTags}\n                >\n                    <OKIcon size={28} round />\n                </OKShareButton>\n            </li>\n            <li title=\"Поделиться в Telegram\">\n                <TelegramShareButton\n                    className=\"social-share-button\"\n                    url={shareUrl}\n                    title={messageWithHashTags}\n                >\n                    <TelegramIcon size={28} round />\n                </TelegramShareButton>\n            </li>\n            <li title=\"Поделиться в Viber\">\n                <ViberShareButton\n                    className=\"social-share-button\"\n                    url={shareUrl}\n                    title={message}\n                >\n                    <ViberIcon size={28} round />\n                </ViberShareButton>\n            </li>\n        </ul>\n    );\n}\n\nexport default SocialShareButtonList;\n","import React from 'react';\nimport SocialShareButtonList from '../Social/SocialShareButtonList';\nimport './HeaderContent.css';\n\nconst HeaderContent = () => {\n    return (\n        <div className=\"header-content\">\n            <div className=\"brand\">\n                <div className=\"brand-logo\"></div>\n            </div>\n            <div className=\"social-buttons\">helpbelarus.org@gmail.com</div>\n            <div className=\"social-buttons\">\n                <span>Поделиться в социальных сетях</span>\n                <SocialShareButtonList />\n            </div>\n        </div>\n    );\n}\n\nexport default HeaderContent;\n","import React from 'react';\nimport { Select } from 'antd';\nimport './SubHeaderContent.css';\n\nconst SubHeaderContent = (props) => {\n    return (\n        <div className=\"sub-header\">\n            <div className=\"event\">\n                <div className=\"event-primary\">{props.event.location}</div>\n                <div className=\"event-details\">{props.event.shortDescription}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default SubHeaderContent;\n","import React, { Component } from 'react';\n\nimport { Button, Drawer } from 'antd';\nimport {CloseOutlined} from '@ant-design/icons';\n\nclass ButtonCan extends Component {\n    state = { visible: false };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Button className=\"ant-btn ant-btn-primary ant-btn-round ant-btn-lg\" onClick={this.showModal}>Я могу помочь</Button>\n                \n                <Drawer\n                    placement=\"right\"\n                    closable={false}\n                    onClose={this.handleCancel}\n                    visible={this.state.visible}                    \n                    className=\"drawerForm\"\n                >\n                    <div className=\"gamburgerMenuWrapper\">\n                        <Button type=\"\" className=\"\" onClick={this.handleCancel} shape=\"circle\" icon={<CloseOutlined />} />\n                    </div>\n                    <div className=\"frameWrapper\">\n                    <iframe className=\"googleForms\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSf2lRStuIiQ5fhUTzKFd_mVUkYjd0ZJ0qKQz77_HJN8154eWA/viewform?embedded=true\"  frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Загрузка…</iframe>\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default ButtonCan;","import React, { Component } from 'react';\n\nimport { Button, Drawer } from 'antd';\nimport {CloseOutlined} from '@ant-design/icons';\n\nclass ButtonNeed extends Component {\n    state = { visible: false };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleCancel = e => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Button className=\"ant-btn ant-btn-primary ant-btn-round ant-btn-lg\" onClick={this.showModal}>Мне нужна помощь</Button>\n                \n                <Drawer\n                    placement=\"right\"\n                    closable={false}\n                    onClose={this.handleCancel}\n                    visible={this.state.visible}\n                    className=\"drawerForm\"\n                >\n                    <div className=\"gamburgerMenuWrapper\">\n                        <Button type=\"\" className=\"\" onClick={this.handleCancel} shape=\"circle\" icon={<CloseOutlined />} />\n                    </div>\n                    <div className=\"frameWrapper\">\n                        <iframe className='googleForms' src=\"https://docs.google.com/forms/d/e/1FAIpQLSf0WrxY_AKJdRxCjJ6NpRpzzIfrY93gtPt77EKpf1Zk3oauaw/viewform?embedded=true\"  frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Загрузка…</iframe>\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default ButtonNeed;","import React from 'react';\nimport './FooterContent.css';\nimport ButtonCan from './Button-can'\nimport ButtonNeed from './Button-need'\n\nconst FooterContent = (props) => {\n    return (\n        <div className=\"footer-content\">\n            <ButtonCan />\n            <ButtonNeed />\n        </div>\n    );\n}\n\nexport default FooterContent;\n","export const EVENT = {\n  dateTime: '18 ноября 2020',\n  shortDateTime: '18 ноября 2020',\n  description: 'Помощь людям по Минску',\n  shortDescription: 'Помогаем всем и всюду',\n  location: 'помогаем IT-шникам',//'пл. Бангалор',\n  coordinates: [53.930154, 27.570241],\n};","import React, { useState } from 'react';\nimport './App.css';\nimport { Layout } from 'antd';\nimport 'antd/dist/antd.css';\nimport { Route, Switch, useHistory } from 'react-router-dom'\nimport { YMaps } from 'react-yandex-maps';\nimport MainMap from './Maps/MainMap';\nimport HeaderContent from './Components/HeaderContent';\nimport SubHeaderContent from './Components/SubHeaderContent';\nimport FooterContent from './Components/FooterContent';\nimport { EVENT } from './Core/event';\nimport { CONFIG } from './Core/config';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction getDirectionFromPath() {\n  return window.location.pathname === '/' ? 'to' : 'from';\n}\n\nexport default function App() {\n  const history = useHistory();\n\n  const [direction, setDirection] = useState(getDirectionFromPath());\n\n  function onChangeDirection(direction) {\n    setDirection(direction);\n\n    const path = direction === 'to' ? '/' : '/back';\n    history.push(path);\n  }\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n          <HeaderContent />\n          <SubHeaderContent\n            event={EVENT}\n            direction={direction}\n            changeDirection={onChangeDirection} />\n      </Header>\n      <Content className=\"content\">\n        <div className=\"map-wrapper\">\n            <YMaps query={{ apikey: CONFIG.yandexMapsApiKey }}>\n              <Switch>\n                <Route path=\"/\" exact>\n                  <MainMap\n                    direction=\"to\"\n                    event={EVENT} />\n                </Route>\n                <Route path=\"/back\">\n                  <span></span>\n                  <MainMap\n                    direction=\"from\"\n                    event={EVENT} />\n                </Route>\n              </Switch>\n            </YMaps>\n        </div>\n      </Content>\n      <Footer>\n          <FooterContent telegramBot={CONFIG.telegramBot} />\n      </Footer>\n    </Layout>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nconst application = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(application, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}